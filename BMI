import tkinter as tk
from tkinter import messagebox


class BMI:
    def __init__(self, root):
        # Setting the screen for BMI
        self.root = root
        self.root.title("BMI Calculator")
        self.root.minsize(width=500, height=500)
        self.root.config(padx=50, pady=30)

        # Creating labels like giving colors, fonts, and font-size
        self.label = tk.Label(self.root, text="BMI Calculator", bg='black', fg='white', font=('Roboto', 25))
        self.label.pack(pady=30)

        self.age_label = tk.Label(self.root, text='How old are you?', bg='gold', fg='red', font=('Albert Sans', 15))
        self.age_label.pack(pady=10)

        # Creating a frame for input widgets
        self.frame = tk.Frame(self.root)
        self.frame.pack(expand=True, fill='both', padx=15, pady=10)

        # Entry widget for age input
        self.entry_age = tk.Entry(self.frame, font=('Albert Sans', 12), bg='black', fg='white')
        self.entry_age.pack(pady=10)

        # Label and Entry widget for height input
        self.height_label = tk.Label(self.frame, text='Height (cm):', bg='gold', fg='black', font=('Sora', 15))
        self.height_label.pack(pady=10)

        self.entry_height = tk.Entry(self.frame, font=('Sora', 12), bg='blue', fg="white")
        self.entry_height.pack(pady=10)

        # Label and Entry widget for weight input
        self.weight_label = tk.Label(self.frame, text='What is your weight (kg)?', bg='skyblue', fg='black',
                                     font=('IBM Plex Mono', 15))
        self.weight_label.pack(pady=10)

        self.entry_weight = tk.Entry(self.frame, font=('IBM Plex Mono', 12), bg='red', fg='yellow')
        self.entry_weight.pack(pady=10)

        # Button to calculate BMI
        self.button = tk.Button(self.frame, text='Calculate your BMI', bg='darkgreen', fg='white',
                                font=('Old Standard TT', 12), command=self.BMI_calc)
        self.button.pack(pady=10)

        # Label to display the result
        self.result_label = tk.Label(self.frame, text='', font=('Arial', 15))
        self.result_label.pack(pady=10)

    def BMI_calc(self):
        try:
            # Getting the input values
            age = int(self.entry_age.get())
            height = float(self.entry_height.get())
            weight = float(self.entry_weight.get())

            # Calculating BMI
            height_in_meters = height / 100
            bmi = weight / (height_in_meters ** 2)

            # Displaying the result
            self.result_label.config(text=f"Your BMI is: {bmi:.2f}")

            # Setting rules for BMI categories
            if bmi < 16:
                messagebox.showinfo('According to BMI Category', 'Severely underweight')
            elif 16 <= bmi < 17:
                messagebox.showinfo("According to BMI Category", 'Moderately underweight')
            elif 17 <= bmi < 18.5:
                messagebox.showinfo("According to BMI Category", 'Slightly underweight')
            elif 18.5 <= bmi < 25:
                messagebox.showinfo("According to BMI Category", 'Normal weight')
            elif 25 <= bmi < 30:
                messagebox.showinfo("According to BMI Category", "Overweight")
            elif 30 <= bmi < 35:
                messagebox.showinfo('According to BMI Category', 'Obese Class I')
            elif 35 <= bmi < 40:
                messagebox.showinfo('According to BMI Category', 'Obese Class II')
            else:
                messagebox.showinfo('According to BMI Category', 'Obese Class III')

        except ValueError:
            messagebox.showerror("Input error", "Please enter valid numbers for age, height, and weight")

    def run(self):
        self.root.mainloop()


if __name__ == "__main__":
    root = tk.Tk()
    app = BMI(root)
    app.run()
